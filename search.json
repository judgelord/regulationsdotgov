[{"path":"https://judgelord.github.io/regulationsdotgov/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Devin Judge-Lord & Maya Khuzam Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/articles/get_dockets.html","id":"get-dockets-from-an-agency","dir":"Articles","previous_headings":"","what":"Get dockets from an agency","title":"Dockets","text":"get_dockets(\"[agency_acronym]\") retrieves dockets agency (see official acronyms regulations.gov)","code":"# you need an API key #source(\"~/api-key.R\")  library(regulationsdotgov) # get FBI dockets #FBI_dockets <- get_dockets(\"FBI\")"},{"path":"https://judgelord.github.io/regulationsdotgov/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Devin Judge-Lord. Author, maintainer. Maya Khuzam. Author.","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Judge-Lord D, Khuzam M (2025). regulationsdotgov: Get Data Regulations.gov. R package version 0.0.0.9000, https://judgelord.github.io/regulationsdotgov/.","code":"@Manual{,   title = {regulationsdotgov: Get Data from Regulations.gov},   author = {Devin Judge-Lord and Maya Khuzam},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://judgelord.github.io/regulationsdotgov/}, }"},{"path":"https://judgelord.github.io/regulationsdotgov/index.html","id":"regulationsdotgov","dir":"","previous_headings":"","what":"Get Data from Regulations.gov","title":"Get Data from Regulations.gov","text":"Get data regulations.gov","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Get Data from Regulations.gov","text":"can install development version regulationsdotgov GitHub :","code":"if (!requireNamespace('pak')) install.packages('pak') pak::pak(\"judgelord/regulationsdotgov\") library(regulationsdotgov)"},{"path":"https://judgelord.github.io/regulationsdotgov/index.html","id":"metadata","dir":"","previous_headings":"","what":"Metadata","title":"Get Data from Regulations.gov","text":"Regulations.gov metadata organized hierarchical database. Comment Details comment (detailed metadata) regulationsdotgov package organized parallel set functions retrieve metadata:","code":""},{"path":[]},{"path":"https://judgelord.github.io/regulationsdotgov/index.html","id":"get-dockets-from-an-agency","dir":"","previous_headings":"Example: Retrieving FBI Metadata","what":"Get dockets from an agency","title":"Get Data from Regulations.gov","text":"get_dockets(\"[agency_acronym]\") retrieves dockets agency (see official acronyms regulations.gov)","code":"# You need an API key, you can register for one at https://open.gsa.gov/api/regulationsgov/.  api_keys <- \"123tHiSkEyIsFaKe\"  # get FBI dockets FBI_dockets <- get_dockets(agency = \"FBI\", api_keys = api_keys)  head(FBI_dockets) > head(FBI_dockets) # A tibble: 6 × 8    docketType    lastModifiedDate     highlightedContent agencyId title                objectId id    lastpage   <chr>         <chr>                <lgl>              <chr>    <chr>                <chr>    <chr> <lgl>    1 Rulemaking    2024-08-26T13:14:32Z NA                 FBI      \"Bipartisan Safer C… 0b00006… FBI-… TRUE     2 Rulemaking    2024-08-26T13:13:45Z NA                 FBI      \"Child Protection I… 0b00006… FBI-… TRUE     3 Rulemaking    2023-08-25T08:08:48Z NA                 FBI      \"Recently Posted FB… 0b00006… FBI_… TRUE     4 Rulemaking    2021-05-02T01:06:49Z NA                 FBI      \"National Instant C… 0b00006… FBI-… TRUE     5 Rulemaking    2021-05-02T01:06:49Z NA                 FBI      \"FBI Criminal Justi… 0b00006… FBI-… TRUE     6 Nonrulemaking 2021-05-02T01:06:49Z NA                 FBI      \"FBI Records Manage… 0b00006… FBI-… TRUE FBI_dockets$id > FBI_dockets$id [1] \"FBI-2024-0001\"  \"FBI-2023-0001\"  \"FBI_FRDOC_0001\" \"FBI-2013-0001\"  \"FBI-2008-0001\"  \"FBI-2008-0003\"  \"FBI-2016-0001\"  \"FBI-2008-0002\" \"FBI-2011-0001\""},{"path":"https://judgelord.github.io/regulationsdotgov/index.html","id":"get-documents-from-a-docket-folder","dir":"","previous_headings":"Example: Retrieving FBI Metadata","what":"Get documents from a docket folder","title":"Get Data from Regulations.gov","text":"get_documents(\"[docketId]\") retrieves documents docket","code":"FBI_docket_2013 <- get_documents(docketId = \"FBI-2013-0001\", api_keys = api_keys)  head(FBI_docket_2013) > head(FBI_docket_2013) # A tibble: 2 × 17   documentType  lastModifiedDate  highlightedContent frDocNum withdrawn agencyId allowLateComment commentEndDate title postedDate docketId subtype   <chr>         <chr>             <chr>              <chr>    <lgl>     <chr>    <lgl>            <chr>          <chr> <chr>      <chr>    <lgl>   1 Proposed Rule 2013-03-30T02:01… \"\"                 2013-01… FALSE     FBI      FALSE            2013-03-30T03… Nati… 2013-01-2… FBI-201… NA      2 Notice        2013-03-22T20:22… \"\"                 NA       FALSE     FBI      FALSE            NA             Dock… 2013-03-2… FBI-201… NA      # ℹ 5 more variables: commentStartDate <chr>, openForComment <lgl>, objectId <chr>, id <chr>, lastpage <lgl> # Although the docket contains two documents, only the 'Proposed Rule' had a comment period, so we'll use the objectId for that document to collect comments. FBI_docket_2013$objectId[1] > FBI_docket_2013$objectId[1] [1] \"09000064811daace\""},{"path":"https://judgelord.github.io/regulationsdotgov/index.html","id":"get-metadata-for-all-comments-on-a-document","dir":"","previous_headings":"Example: Retrieving FBI Metadata","what":"Get metadata for all comments on a document","title":"Get Data from Regulations.gov","text":"get_commentsOnId(\"[objectId]\") retrieves comments specific document (e.g., specific proposed rule)","code":"commentsOn_FBI_docket_2013 <- get_commentsOnId(commentOnId = \"09000064811daace\", api_keys = api_keys)  # There are 36 comments on this document, we can see the metadata for the first 6 below head(commentsOn_FBI_docket_2013) > head(commentsOn_FBI_docket_2013) # A tibble: 6 × 11   documentType      lastModifiedDate     highlightedContent withdrawn agencyId title                objectId postedDate id    lastpage commentOnId   <chr>             <chr>                <chr>              <lgl>     <chr>    <chr>                <chr>    <chr>      <chr> <lgl>    <chr>       1 Public Submission 2013-04-01T17:16:07Z \"\"                 FALSE     FBI      Comment on FR Doc #… 0900006… 2013-04-0… FBI-… TRUE     0900006481… 2 Public Submission 2013-04-01T17:15:49Z \"\"                 FALSE     FBI      Comment on FR Doc #… 0900006… 2013-04-0… FBI-… TRUE     0900006481… 3 Public Submission 2013-04-01T17:15:25Z \"\"                 FALSE     FBI      Comment on FR Doc #… 0900006… 2013-04-0… FBI-… TRUE     0900006481… 4 Public Submission 2013-04-01T17:15:07Z \"\"                 FALSE     FBI      Comment on FR Doc #… 0900006… 2013-04-0… FBI-… TRUE     0900006481… 5 Public Submission 2013-04-01T17:14:34Z \"\"                 FALSE     FBI      Comment on FR Doc #… 0900006… 2013-04-0… FBI-… TRUE     0900006481… 6 Public Submission 2013-04-01T17:14:13Z \"\"                 FALSE     FBI      Comment on FR Doc #… 0900006… 2013-04-0… FBI-… TRUE     0900006481… # Now we'll store the id for each comment on the document  comments_to_collect <- commentsOn_FBI_docket_2013$id  head(comments_to_collect) > head(comments_to_collect) [1] \"FBI-2013-0001-0038\" \"FBI-2013-0001-0037\" \"FBI-2013-0001-0036\" \"FBI-2013-0001-0035\" \"FBI-2013-0001-0034\" \"FBI-2013-0001-0033\""},{"path":"https://judgelord.github.io/regulationsdotgov/index.html","id":"get-detailed-metadata-about-individual-comments","dir":"","previous_headings":"Example: Retrieving FBI Metadata","what":"Get detailed metadata about individual comments","title":"Get Data from Regulations.gov","text":"get_comment_details_content(\"[id]\") retrieves comments specific document (e.g., specific proposed rule)","code":"comments <- get_comment_details(id = comments_to_collect, api_keys = api_keys)  # We retrieve 21 attributes for these 36 comments   colnames(comments) > colnames(comment)  [1] \"commentOn\"           \"commentOnDocumentId\" \"duplicateComments\"   \"agencyId\"            \"comment\"             \"docketId\"             [7] \"documentType\"        \"objectId\"            \"modifyDate\"          \"organization\"        \"pageCount\"           \"postedDate\"          [13] \"receiveDate\"         \"title\"               \"trackingNbr\"         \"withdrawn\"           \"openForComment\"      \"id\"                  [19] \"attachments\" # Let's take a look a closer look at one of the comments.  comments$comment[23] > comments$comment[23] [1] \"Docket No. FBI 152, Proposal 1 should be approved to stem gang violence and prevent youth suicide on Indian reservations.\" # We can use the following attachments attribute to download any file(s) that may accompany the comment.  comments$attachments[23] > comments$attachments[23] [[1]] [[1]][[1]]                                                                  fileUrl format   size 1 https://downloads.regulations.gov/FBI-2013-0001-0015/attachment_1.docx   docx 153789 2  https://downloads.regulations.gov/FBI-2013-0001-0015/attachment_1.pdf    pdf  74106"},{"path":"https://judgelord.github.io/regulationsdotgov/index.html","id":"search","dir":"","previous_headings":"","what":"Search","title":"Get Data from Regulations.gov","text":"package also contains functions use API’s search function search text documents comments: get_searchTerm(searchTerm = \"[searchTerm]\", documents = c(\"documents\", \"comments\"), agency_acronym = c(\"\", \"[agency_acronym]\"), docket_id = c(\"\", \"[docket_id]\"), document_id = c(\"\", \"[document_id]\")  )","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/index.html","id":"download","dir":"","previous_headings":"","what":"Download","title":"Get Data from Regulations.gov","text":"Finally, using URLs returned get_documents() get_comment_details(), can download files (e.g., pdfs) download_regulationsdotgov(\"[url]\") saves local copies desired files standard file structure mirroring “files” folder: “files/agency_acronym/docket_id/document_id/document_name.extension” (e.g., “files/ACF/ACF-2009-0005/ACF-2009-0005-0018_1.doc” public comment ACF Notice ACF-2009-0005-0002. notice located “files/ACF/ACF-2009-0005/ACF-2009-0005-0002.pdf”) specify file structure, simply use base download function download.file(url = \"[url]\", destfile = \"[path]\")","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/index.html","id":"important-notes","dir":"","previous_headings":"","what":"Important notes","title":"Get Data from Regulations.gov","text":"use regulationsdotgov, need API key. keys limits. can request rate increase. functions currently built theory user wants results given agency/docket/document. highlighted documentation, user can limit search results given date lastModifiedDate argument (API calls currently hard-coded descending order). future, add options restrict results given timeframe.","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_commentsOnId.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata for all comments on a document — get_commentsOnId","title":"Get metadata for all comments on a document — get_commentsOnId","text":"get_commentsOnId(\"[objectId]\") retrieves metadata comments document","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_commentsOnId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata for all comments on a document — get_commentsOnId","text":"","code":"get_commentsOnId(objectId, lastModifiedDate = Sys.time(), api_keys)"},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_commentsOnId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata for all comments on a document — get_commentsOnId","text":"objectId objectId obtained document's metadata lastModifiedDate Filter results last modified date. Default set Sys.time(). User-specified values must formatted yyyy-MM-dd%20HH:mm:ss. api_keys API key(s) api.data.gov.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_commentsOnId.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata for all comments on a document — get_commentsOnId","text":"","code":"# comment_metadata <- get_commentsOnId(commentOnId = \"09000064865d514a\", api_keys = \"DEMO_KEY\")  # head(comment_metadata)  # A tibble: 1 × 11 #   documentType      lastModifiedDate    highlightedContent withdrawn agencyId title objectId postedDate id    #   <chr>             <chr>               <chr>              <lgl>     <chr>    <chr> <chr>    <chr>      <chr> # 1 Public Submission 2024-07-26T13:29:3… \"\"                 FALSE     FBI      Comm… 0900006… 2024-07-2… FBI-… # ℹ 2 more variables: lastpage <lgl>, commentOnId <chr>"},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_dockets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dockets from an agency — get_dockets","title":"Get dockets from an agency — get_dockets","text":"get_dockets(\"[agency_acronym]\") retrieves dockets agency","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_dockets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dockets from an agency — get_dockets","text":"","code":"get_dockets(agency, lastModifiedDate = Sys.time(), api_keys)"},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_dockets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dockets from an agency — get_dockets","text":"agency Agency acronym (see official acronyms regulations.gov) lastModifiedDate Filter results last modified date. Default set Sys.time(). User-specified values must formatted yyyy-MM-dd%20HH:mm:ss. api_keys API key(s) api.data.gov.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_dockets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dockets from an agency — get_dockets","text":"","code":"# FBI_dockets <- get_dockets(agency = \"FBI\", api_keys = \"DEMO_KEY\")   # head(FBI_dockets)  # A tibble: 6 × 8 #   docketType    lastModifiedDate     highlightedContent agencyId title                objectId id    lastpage #   <chr>         <chr>                <lgl>              <chr>    <chr>                <chr>    <chr> <lgl>    # 1 Rulemaking    2024-08-26T13:14:32Z NA                 FBI      \"Bipartisan Safer C… 0b00006… FBI-… TRUE     # 2 Rulemaking    2024-08-26T13:13:45Z NA                 FBI      \"Child Protection I… 0b00006… FBI-… TRUE     # 3 Rulemaking    2023-08-25T08:08:48Z NA                 FBI      \"Recently Posted FB… 0b00006… FBI_… TRUE     # 4 Rulemaking    2021-05-02T01:06:49Z NA                 FBI      \"National Instant C… 0b00006… FBI-… TRUE     # 5 Rulemaking    2021-05-02T01:06:49Z NA                 FBI      \"FBI Criminal Justi… 0b00006… FBI-… TRUE     # 6 Nonrulemaking 2021-05-02T01:06:49Z NA                 FBI      \"FBI Records Manage… 0b00006… FBI-… TRUE    ##{DELETE?} ##---- Should be DIRECTLY executable !! ---- ##-- ==>  Define data, use random, ##--  or standard data sets, see data().  ## The function is currently defined as #function (agency, lastModifiedDate = Sys.time())  #{ #    lastModifiedDate <- lastModifiedDate %>% ymd_hms() %>% with_tz(tzone = \"America/New_York\") %>%  #        gsub(\" \", \"%20\", .) %>% str_remove(\"\\..*\") #    path <- make_path_dockets(agency, lastModifiedDate) #    result <- purrr::map(path, GET) #    status <<- tail(map(result, status_code), 1) %>% as.numeric() #    url <- result[[20]][1]$url #    if (status != 200) { #        message(paste(format(Sys.time(), \"%X\"), \"| Status\", status,  #            \"| URL:\", url)) #        Sys.sleep(6) #    } #    remaining <<- pluck(tail(map(result, headers), 1), 1, \"x-ratelimit-remaining\") #    if (remaining < 2) { #        message(paste(format(Sys.time(), \"%X\"), \"- Hit rate limit, will continue after one minute\")) #        Sys.sleep(60) #    } #    docket_metadata <- purrr::map_if(result, ~status_code(.x) ==  #        200, ~fromJSON(rawToChar(.x$content))) #    return(docket_metadata) #  } #"},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_documents.html","id":null,"dir":"Reference","previous_headings":"","what":"Get documents from a docket folder — get_documents","title":"Get documents from a docket folder — get_documents","text":"get_documents(\"[docketId]\") retrieves metadata documents belonging docket","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_documents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get documents from a docket folder — get_documents","text":"","code":"get_documents(docketId, lastModifiedDate, api_keys)"},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_documents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get documents from a docket folder — get_documents","text":"docketId ID docket lastModifiedDate Filter results last modified date. Default set Sys.time(). User-specified values must formatted yyyy-MM-dd%20HH:mm:ss. api_keys API key(s) api.data.gov.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_documents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get documents from a docket folder — get_documents","text":"","code":"# FBI_docket_2024 <- get_documents(docketId = \"FBI-2024-0001\", api_keys = \"DEMO_KEY\")  # head(FBI_docket_2024)  # A tibble: 1 × 16 #   documentType lastModifiedDate     highlightedContent frDocNum   withdrawn agencyId # commentEndDate     title #   <chr>        <chr>                <chr>              <chr>      <lgl>     <chr>    <chr>       #        <chr> # 1 Rule         2024-07-26T01:01:24Z \"\"                 2024-14253 FALSE     FBI      2024-08# -01T03:59:… Bipa… # ℹ 8 more variables: postedDate <chr>, docketId <chr>, subtype <lgl>, commentStartDate <chr>, #   openForComment <lgl>, objectId <chr>, id <chr>, lastpage <lgl>"},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_searchTerm.html","id":null,"dir":"Reference","previous_headings":"","what":" Search for a term — get_searchTerm","title":" Search for a term — get_searchTerm","text":"get_searchTerm(\"[searchTerm]\") returns documents, comments, dockets filtered specific term","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_searchTerm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":" Search for a term — get_searchTerm","text":"","code":"get_searchTerm(searchTerm, documents, lastModifiedDate, api_keys)"},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_searchTerm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":" Search for a term — get_searchTerm","text":"searchTerm Term filter . documents Object return. Default set documents. Valid options documents, comments, dockets. lastModifiedDate Filter results last modified date. Default set Sys.time(). User-specified values must formatted yyyy-MM-dd%20HH:mm:ss. api_keys API key(s) api.data.gov.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://judgelord.github.io/regulationsdotgov/reference/get_searchTerm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":" Search for a term — get_searchTerm","text":"","code":"##---- Should be DIRECTLY executable !! ---- ##-- ==>  Define data, use random, ##--  or do  help(data=index)  for the standard data sets.  ## The function is currently defined as function (x)  {   } #> function (x)  #> { #> } #> <environment: 0x556fa8c9c060>"},{"path":"https://judgelord.github.io/regulationsdotgov/reference/save_dockets.html","id":null,"dir":"Reference","previous_headings":"","what":"Save docket metadata in directory. — save_dockets","title":"Save docket metadata in directory. — save_dockets","text":"save_dockets(\"[agency_acronym]\") creates data directory collecting agency docket metadata within folder structure.","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/reference/save_dockets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save docket metadata in directory. — save_dockets","text":"","code":"save_dockets <- function(agency)"},{"path":"https://judgelord.github.io/regulationsdotgov/reference/save_dockets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save docket metadata in directory. — save_dockets","text":"agency Agency acronym(s) (see official acronyms regulations.gov)","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/reference/save_dockets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save docket metadata in directory. — save_dockets","text":"function uses get_dockets function internally, need 'api_keys' stored environment order function properly.","code":""},{"path":"https://judgelord.github.io/regulationsdotgov/reference/save_dockets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save docket metadata in directory. — save_dockets","text":"Stores data .rmd file.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://judgelord.github.io/regulationsdotgov/reference/save_dockets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save docket metadata in directory. — save_dockets","text":"","code":"agencies <- c(\"NLRB\", \"OMB\", \"TSA\")  save_dockets(agencies) #> Error in if (!dir.exists(agency_dir)) {    dir.create(agency_dir, recursive = TRUE)}: the condition has length > 1"}]
